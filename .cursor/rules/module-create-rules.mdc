---
description: create a new module rules
globs: 
alwaysApply: false
---


i mean by module  , 

a list page , a detail view component for the record,  an edit form and a container  component that manages the state edit list create and view 

according to state , container shows the apprpriate component. 

cretation order: 
1. zod schema and types
2. server actions
3- query and mutation hooks
4- c omponents and pages


i'll give you examples.

- always create zod schemas in [types.ts](mdc:lib/types.ts)
- create DTO types from zod schemas



- when creating  a new module, create a new folder in the app directory and add the components, pages, and styles for the module
 

- create a new server action  in the app / actions directory and add the action here and use in the tanstack query and mutations for the module

- i will give you the table in supabase. if i dont give , ask for the table name. 
 
- i have main modules like admin(for administration and declaration pages like users, casinos, shifts, game tables etc)
 
- i have reports module(inspector assignments history on shifts  )
 
 
- i have operations module for daily operations like assigning inspectors to game tables for shifts, open/close days
 
- if i dont specify the main module, ask me the main module



follow the style and functionality in samples.



and in the view there must be a tab component,   and first tab will be details tab.  

if the model has detail tables  add tabs for them and put a placeholder content. 




when you need  to create a new component to use in multiple module, create under the components folder at the root of the project


when you create a module add menu item to the menu - items.tsx file under the lib directory

give a new uuid for every menu item.  and set role to ADMIN if i didnt specify

sample menu item :
 {
        id: "3c4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f",
        title: "Protocol Types",
        url: "/settings/protocol-types",
        icon: Database,
        role: "ADMIN",
      },
